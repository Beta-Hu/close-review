<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beta.closereview.mapper.SubmissionMapper">
    <resultMap id="BaseResultMap" type="com.beta.closereview.dao.Submission">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="corresponding" property="corresponding" jdbcType="INTEGER"/>
        <result column="conference" property="conference" jdbcType="INTEGER"/>
        <result column="main_area" property="mainArea" jdbcType="INTEGER"/>
        <result column="file" property="file" jdbcType="VARCHAR"/>
        <result column="support_material" property="supportMaterial" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="submit_time" property="submitTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.beta.closereview.dao.Submission" extends="BaseResultMap">
        <result column="author" property="author" jdbcType="LONGVARCHAR"/>
        <result column="second_area" property="secondArea" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, title, corresponding, conference, main_area, file, support_material, status,
    submit_time, update_time
    </sql>
    <sql id="Blob_Column_List">
        author, second_area
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from cr_submission
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getSubmissionsOfUid" resultType="com.beta.closereview.dao.Submission">
        select * from cr_submission where json_contains(author, concat(#{uid}, ''))
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from cr_submission
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.beta.closereview.dao.Submission">
        insert into cr_submission (id, title, corresponding,
                                   conference, main_area, file,
                                   support_material, status, submit_time,
                                   update_time, author, second_area)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{corresponding,jdbcType=INTEGER},
                #{conference,jdbcType=INTEGER}, #{mainArea,jdbcType=INTEGER}, #{file,jdbcType=VARCHAR},
                #{supportMaterial,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{submitTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{author,jdbcType=LONGVARCHAR}, #{secondArea,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.beta.closereview.dao.Submission">
        insert into cr_submission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="corresponding != null">
                corresponding,
            </if>
            <if test="conference != null">
                conference,
            </if>
            <if test="mainArea != null">
                main_area,
            </if>
            <if test="file != null">
                file,
            </if>
            <if test="supportMaterial != null">
                support_material,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="submitTime != null">
                submit_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="secondArea != null">
                second_area,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="corresponding != null">
                #{corresponding,jdbcType=INTEGER},
            </if>
            <if test="conference != null">
                #{conference,jdbcType=INTEGER},
            </if>
            <if test="mainArea != null">
                #{mainArea,jdbcType=INTEGER},
            </if>
            <if test="file != null">
                #{file,jdbcType=VARCHAR},
            </if>
            <if test="supportMaterial != null">
                #{supportMaterial,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="author != null">
                #{author,jdbcType=LONGVARCHAR},
            </if>
            <if test="secondArea != null">
                #{secondArea,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.beta.closereview.dao.Submission">
        update cr_submission
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="corresponding != null">
                corresponding = #{corresponding,jdbcType=INTEGER},
            </if>
            <if test="conference != null">
                conference = #{conference,jdbcType=INTEGER},
            </if>
            <if test="mainArea != null">
                main_area = #{mainArea,jdbcType=INTEGER},
            </if>
            <if test="file != null">
                file = #{file,jdbcType=VARCHAR},
            </if>
            <if test="supportMaterial != null">
                support_material = #{supportMaterial,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                submit_time = #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=LONGVARCHAR},
            </if>
            <if test="secondArea != null">
                second_area = #{secondArea,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.beta.closereview.dao.Submission">
        update cr_submission
        set title            = #{title,jdbcType=VARCHAR},
            corresponding    = #{corresponding,jdbcType=INTEGER},
            conference       = #{conference,jdbcType=INTEGER},
            main_area        = #{mainArea,jdbcType=INTEGER},
            file             = #{file,jdbcType=VARCHAR},
            support_material = #{supportMaterial,jdbcType=VARCHAR},
            status           = #{status,jdbcType=INTEGER},
            submit_time      = #{submitTime,jdbcType=TIMESTAMP},
            update_time      = #{updateTime,jdbcType=TIMESTAMP},
            author           = #{author,jdbcType=LONGVARCHAR},
            second_area      = #{secondArea,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.beta.closereview.dao.Submission">
        update cr_submission
        set title            = #{title,jdbcType=VARCHAR},
            corresponding    = #{corresponding,jdbcType=INTEGER},
            conference       = #{conference,jdbcType=INTEGER},
            main_area        = #{mainArea,jdbcType=INTEGER},
            file             = #{file,jdbcType=VARCHAR},
            support_material = #{supportMaterial,jdbcType=VARCHAR},
            status           = #{status,jdbcType=INTEGER},
            submit_time      = #{submitTime,jdbcType=TIMESTAMP},
            update_time      = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>